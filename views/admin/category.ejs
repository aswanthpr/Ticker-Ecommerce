<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <title>Ticker Admin </title>
  <meta name="description" content="">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="robots" content="all,follow">
  <!-- Bootstrap CSS-->
  <link rel="stylesheet" href="/admin/vendor/bootstrap/css/bootstrap.min.css">
  <!-- Font Awesome CSS-->
  <link rel="stylesheet" href="/admin/vendor/font-awesome/css/font-awesome.min.css">
  <!-- Custom Font Icons CSS-->
  <link rel="stylesheet" href="/admin/css/font.css">
  <!-- Google fonts - Muli-->
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Muli:300,400,700">
  <!-- theme stylesheet-->
  <link rel="stylesheet" href="/admin/css/style.default.css" id="theme-stylesheet">
  <!-- Custom stylesheet - for your changes-->
  <link rel="stylesheet" href="/admin/css/custom.css">
  <!-- Favicon-->
  <link rel="shortcut icon" href="/image/download.png">
  <!-- Tweaks for older IEs--><!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script><![endif]-->
</head>

<body>
  <header class="header">
    <nav class="navbar navbar-expand-lg">
      <!-- <div class="search-panel">
        <div class="search-inner d-flex align-items-center justify-content-center">
          <div class="close-btn">Close <i class="fa fa-close"></i></div>
          <form id="searchForm" action="/admin/categorySearch">
            <div class="form-group">
              <input type="search" name="search" placeholder="What are you searching for...">
              <button type="submit" class="submit">Search</button>
            </div>
          </form>
        </div>
      </div> -->

      <div class="container-fluid d-flex align-items-center justify-content-between">
        <div class="navbar-header">
          <!-- Navbar Header--><a href="/admin/dashboard" class="navbar-brand">
            <div class="brand-text brand-big visible text-uppercase"><strong
                class="text-primary">TICKER</strong><strong>ADMIN</strong></div>
            <div class="brand-text brand-sm"><strong class="text-primary">T</strong><strong>A</strong></div>
          </a>
          <!-- Sidebar Toggle Btn-->
          <button class="sidebar-toggle"><i class="fa fa-long-arrow-left"></i></button>
        </div>

        <div class="right-menu list-inline no-margin-bottom ">
          <form id="searchForm" action="/admin/categorySearch">
            <div class="form-group d-flex">

              <input name="search" id="search" type="search" placeholder="What are you searching for..."
                class="mr-sm-3 form-control form-control">
              <button style="width: 90px;" type="submit" class="btn btn-primary">search</button>
            </div>
          </form>
        </div>
        <div class="right-menu list-inline no-margin-bottom">


          <!-- Log out  -->

          <div class="list-inline-item logout">


            <a href="/admin/logout" class="btn btn-dark btn-sm ">Logout<i class="icon-logout"></i></a>

          </div>

        </div>
      </div>
    </nav>
  </header>
  <div class="d-flex align-items-stretch">
    <!-- Sidebar Navigation-->
    <nav id="sidebar">
      <!-- Sidebar Header-->

      <ul class="list-unstyled">
        <li><a href="/admin/dashboard"> <i class="icon-home"></i>Dashboard </a></li>
        <li><a href="/admin/product"> <i class=" icon icon-pencil-case"></i>Products</a></li>
        <li><a href="/admin/user"><i class="icon icon-user"></i>Users</a></li>
        <li class="active"><a href="/admin/category"> <i class="icon-layers"></i>Category</a></li>
        <li><a href="/admin/orderMgt"> <i class="icon-new-file"></i>Orders</a></li>

        <li><a href="/admin/couponMangement"> <i class="icon icon-check"></i>Coupon</a></li>
        <li><a href="#exampledropdownDropdown" aria-expanded="false" data-toggle="collapse"> <i
              class="icon-windows"></i>Offer</a>
          <ul id="exampledropdownDropdown" class="collapse list-unstyled ">
            <li><a class="active" href="/admin/category-offers"> <i class="icon icon-light-bulb"></i>Category offer</a>
            </li>
            <li><a href="/admin/product-offers"> <i class="icon icon-light-bulb"></i>Product Offers</a></li>
          </ul>
        </li>
        <li><a href="/admin/sales-report"> <i class="icon-page"></i>Sales Repoart</a></li>

        <!-- <li><a href=""> <i class="icon icon-picture"></i>Banner</a></li> -->
      </ul>
      <!-- Sidebar Navidation Menus-->

    </nav>
    <!-- Sidebar Navigation end-->
    <div class="page-content">
      <!-- Page Header-->
      <div class="page-header no-margin-bottom ">
        <div class="container-fluid">
          <h2 class="h5 no-margin-bottom ">C a t e g o r y</h2>
          <div class="block-body text-center d-flex justify-content-end">
            <button type="button" data-toggle="modal" data-target="#myModal" class="btn btn-primary">+ Add
              category</button>
            <!-- Modal-->
            <div id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true"
              class="modal fade text-left">
              <div role="document" class="modal-dialog">
                <div class="modal-content">
                  <div class="modal-header"><strong id="exampleModalLabel" class="modal-title">Add new category</strong>
                    <button type="button" data-dismiss="modal" aria-label="Close" class="close"><span
                        aria-hidden="true">Ã—</span></button>
                  </div>
                  <div class="modal-body">

                    <form action="/admin/add-category" method="post" id="addForm">
                      <div id="modal-body" class="form-group">

                        <input name="name" type="text" placeholder="Category name" id="addCategory" class="addCategory"
                          maxlength="18">
                      </div>

                      <div class="modal-footer">
                        <span class="showMessage mr-5 text-danger" id="showMessage"></span>
                        <button type="button" data-dismiss="modal" class="btn btn-secondary">Close</button>
                        <button id="submitButton" type="submit" class="btn btn-primary"
                          onclick="validateForm()">Save</button>
                      </div>
                    </form>
                  </div>

                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <!-- Breadcrumb-->
      <div class="container-fluid">
        <ul class="breadcrumb">
          <li class="breadcrumb-item"><a href="/admin/dashboard">Home</a></li>
          <li class="breadcrumb-item active">Category </li>
        </ul>


        <!-- ---------------------table------------------------- -->
        <div class="col-lg-12">
          <div class="block">

            <div class="table-responsive">
              <table class="table table-striped table-hover">
                <thead>
                  <tr>
                    <th>NO</th>
                    <th>Category</th>
                    <th>Status</th>
                    <th>Action</th>
                    <th>Edit</th>
                    <th>Delete</th>

                  </tr>
                </thead>
                <tbody>
                  <% if (categoryData.length> 0){%>
                    <% for(let i=0 ; i < categoryData.length ; i++){ %>
                      <tr>
                        <td>
                          <%= i + 1 %>
                        </td>
                        <td>

                          <%= categoryData[i].categoryName.length> 15 ? categoryData[i]?.categoryName.slice(0, 15) +
                            '...' : categoryData[i]?.categoryName %>
                        </td>
                        <td id="statusTxt_<%= categoryData[i]._id %>"
                          class="<%= categoryData[i].status ? 'text-success' : 'text-danger' %>">
                          <%= categoryData[i].status?'Listed':'Unlisted' %>
                        </td>
                        <td>
                          <% if (categoryData[i].status) { %>
                            <a id="statusBtn_<%= categoryData[i]._id %>" class="btn btn-outline-danger btn-sm"
                              onclick="return swalConfirmUnlist('<%= categoryData[i]._id %>')">Unlist</a>
                            <% } else { %>
                              <a id="statusBtn_<%= categoryData[i]._id %>" class="btn btn-outline-success btn-sm"
                                onclick="return swalConfirmList('<%= categoryData[i]._id %>')">List</a>
                              <% } %>


                        </td>



                        <th>
                          <div class="block-body text-center d-flex ">
                            <button type="button" data-toggle="modal" data-target="#editmyModal"
                              class="btn btn-outline-success icon icon-new-file btn-sm"
                              onclick="editCategory('<%= categoryData[i]._id %>','<%= categoryData[i].categoryName%>')"></button>



                          </div>
                        </th>
                        <th>
                          <a class="btn btn-outline-danger icon icon-close btn-sm"
                            onclick="return confirm('Do you want to delete this category')"
                            href="/admin/delete-category/<%= categoryData[i]._id %>"></a>
                        </th>

                      </tr>
                      <% } %>
                        <% } else { %>
                          <tr>
                            <td colspan="4">
                              <p>No Categories found in the database</p>
                            </td>
                          </tr>
                          <% } %>
                </tbody>
              </table>
            </div>
          </div>
          <% if (totalPages && currentPage) { %>
             <div class="card-footer py-4 ">
            <nav aria-label="...">
              <ul class="pagination justify-content-center mb-0">
                <%if(currentPage>1){%>
                  <li class="page-item ">
                    <a class="page-link " href="?page=<%= currentPage - 1 %>" tabindex="-1">
                      < </a>
                  </li>
                  <%}%>
                    <%for (let i=1;i<=totalPages;i++){%>
                      <%if(i==currentPage){%>
                        <li class="page-item ">
                          <a class="page-link" href="?page=<%=i%>">
                            <%=i%>
                          </a>


                        </li>
                        <% }else{ %>


                          <li class="page-item ">
                            <a class="page-link" href="?page=<%=i%>&search=<%=search%>">
                              <%=i%>
                            </a>
                          </li>
                          <%}%>
                            <%}%>
                              <% if(currentPage < totalPages){%>
                                <li class="page-item">
                                  <a class="page-link" href="?page=<%=totalPages%>&search=<%=search%>">></a>


                                </li>
                                <%}%>
              </ul>
            </nav>
          </div>
          <% } %>
        
        </div>

        <!-- edit Modal-->
        <div id="editmyModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true"
          class="modal fade text-left">
          <div role="document" class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header"><strong id="exampleModalLabel" class="modal-title">Edit
                  category</strong>
                <button type="button" data-dismiss="modal" aria-label="Close" class="close"><span
                    aria-hidden="true">Ã—</span></button>
              </div>
              <div class="modal-body">


                <div id="categoryeditcreate">
                  <input name="editCategoryId" type="hidden" id="CategoryId">
                  <input name="editCategoryName" type="text" placeholder="Category name" id="editCategoryName"
                    maxlength="18">

                  <div class="modal-footer">
                    <span class="seenMessage mr-5 text-danger" id="seenMessage"></span>
                    <a type="button" data-dismiss="modal" class="btn btn-outline-secondary">Close</a>

                    <button type="submit" onclick="validateCategoryName(),saveEditCategory()"
                      class="btn btn-outline-primary" id="submitbtn">Save Changes</button>
                  </div>
                </div>
              </div>

            </div>
          </div>
        </div>


      </div>
    </div>
    <script>


      function editCategory(categoryId, categoryName) {
        // Set the category ID and name in the modal inputs
        document.getElementById('CategoryId').value = categoryId;
        document.getElementById('editCategoryName').value = categoryName;

        // Show the modal
        $('#editmyModal').modal('show');
      }


      // Function to validate category name input
      const validateCategoryName = () => {
        const categoryNameInput = document.getElementById('editCategoryName');
        const categoryNameValue = categoryNameInput.value.trim();

        // Check if input is empty
        if (categoryNameValue === '') {
          document.getElementById('seenMessage').textContent = 'Category name cannot be empty.';
          return false;
        }

        // Check if input length is less than 4 characters
        if (categoryNameValue.length < 4) {
          document.getElementById('seenMessage').textContent = 'Category name must be at least 4 characters long.';
          return false;
        }

        // Check if input contains only letters
        const lettersOnlyRegex = /^[a-zA-Z\s]*$/;
        if (!lettersOnlyRegex.test(categoryNameValue)) {
          document.getElementById('seenMessage').textContent = 'Category name must contain only letters.';
          return false;
        }

        // Clear error message
        document.getElementById('seenMessage').textContent = '';

        return true;
      };


      function saveEditCategory() {
        if (validateCategoryName()) {
          const categoryId = document.getElementById('CategoryId').value;
          const categoryName = document.getElementById('editCategoryName').value;

          // Make sure category ID and name are not empty
          if (!categoryId || !categoryName) {
            alert('Category ID or name cannot be empty');
            return;
          }

          // Make a PUT request to update the category
          fetch('/admin/edit-category', {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              categoryId: categoryId,
              categoryName: categoryName
            })
          })
            .then(res => res.json())
            .then(data => {
              if (data.success) {
                // Close the modal
                $('#editmyModal').modal('hide');
                Swal.fire({
                  icon: 'success',
                  title: 'Success!',
                  text: 'Category updated successFully',
                  toast: true,
                  timer: 2000,
                  position: 'top-end',
                  showCancelButton: false,
                  showConfirmButton: false,
                }).then(() => {
                  // Close the modal
                  $('#editmyModal').modal('hide');
                  location.reload();
                });



              } else if (data.error) {
                $('#editmyModal').modal('hide');
                Swal.fire({
                  icon: 'error',
                  title: 'Oops...',
                  text: 'Failed to updated category!',
                  toast: true,
                  timer: 2000,
                  position: 'top-end',
                  showCancelButton: false,
                  showConfirmButton: false,
                })
              }
            })
            .catch(error => {
              console.error('Error updating category:', error);
              Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'filed to update category!',
                toast: true,
                timer: 2000,
                position: 'top-end',
                showCancelButton: false,
                showConfirmButton: false,
              })
            });
        }
      }




    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
      function swalConfirmUnlist(categoryId) {
        return Swal.fire({
          title: "Are you sure you want to unlist this category?",
          text: "This action cannot be undone.",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#d33",
          cancelButtonColor: "#1eba0a",
          confirmButtonText: "Yes, unlist it!",
          toast: true,
        }).then((result) => {
          if (result.isConfirmed) {
            // Make AJAX request to backend
            fetch("/admin/unlist-category/" + categoryId, {
              method: "PUT",
              headers: {
                "Content-Type": "application/json",
              },
              // body: JSON.stringify({ categoryId }), // if you need to send additional data
            })
              .then((response) => {
                if (!response.ok) {
                  throw new Error("Network response was not ok");
                }
                // Show a confirmation message
                Swal.fire({
                  icon: 'success',
                  text: 'The category has been successfully unlisted',
                  toast: true,
                  timer: 2000,
                  position: 'top-end',
                  showConfirmButton: false,
                }).then(() => {
                  let button = document.getElementById('statusBtn_' + categoryId);
                  button.classList.remove('btn-outline-danger');
                  button.classList.add('btn-outline-success');
                  button.innerHTML = "List";
                  button.setAttribute('onclick', 'return swalConfirmList("' + categoryId + '")');
                  let statusText = document.getElementById('statusTxt_' + categoryId);
                  statusText.classList.remove('text-success');
                  statusText.classList.add('text-danger');
                  statusText.textContent = "Unlisted";
                  //location.reload();
                });
              })
              .catch((error) => {
                console.error("There was an error with the fetch operation:", error);
              });
          }
        });
      }

      function swalConfirmList(categoryId) {
        return Swal.fire({
          title: "Are you sure you want to list this category?",
          icon: "question",
          showCancelButton: true,
          confirmButtonColor: "#1eba0a",
          cancelButtonColor: "#d33",
          confirmButtonText: "Yes, list it!",
          toast: true,
        }).then((result) => {
          if (result.isConfirmed) {
            // Make AJAX request to backend
            fetch("/admin/list-category/" + categoryId, {
              method: "PUT",
              headers: {
                "Content-Type": "application/json",
              },
              // body: JSON.stringify({ categoryId }), // if you need to send additional data
            })
              .then((response) => {
                if (!response.ok) {
                  throw new Error("Network response was not ok");
                }
                // Show a confirmation message
                Swal.fire({
                  icon: 'success',
                  text: 'The category has been successfully listed',
                  toast: true,
                  timer: 2000,
                  position: 'top-end',
                  showConfirmButton: false,
                }
                ).then(() => {
                  let button = document.getElementById('statusBtn_' + categoryId);
                  button.classList.remove('btn-outline-success');
                  button.classList.add('btn-outline-danger');
                  button.innerHTML = "Unlist";
                  // Optionally update the onclick event to the unlist function
                  button.setAttribute('onclick', 'return swalConfirmUnlist("' + categoryId + '")');
                  let statusText = document.getElementById('statusTxt_' + categoryId);
                  statusText.classList.remove('text-danger');
                  statusText.classList.add('text-success');
                  statusText.textContent = "Listed";
                  //location.reload();
                });
              })
              .catch((error) => {
                console.error("There was an error with the fetch operation:", error);
              });
          }
        });
      }






      // Function to validate form input
      const validateForm = () => {

        const nameInput = document.getElementById('addCategory');
        const nameValue = nameInput.value.trim();

        // Check if input is empty
        if (nameValue === '') {
          document.getElementById('showMessage').textContent = 'Please enter a category name.';
          return false;
        }

        // Check if input length is less than 4 characters
        if (nameValue.length < 4) {

          document.getElementById('showMessage').textContent = 'Category name must be at least 4 characters long.';

          return false;
        }

        // Check if input contains only letters and numbers
        const lettersOnlyRegex = /^[a-zA-Z\s]*$/;
        if (!lettersOnlyRegex.test(nameValue)) {
          document.getElementById('showMessage').textContent = 'Category name must contain only letters.';

          return false;
        }

        // Clear error message
        document.getElementById('showMessage').textContent = '';

        return true;


      };


      document.getElementById("addForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent default form submission
        if (validateForm()) {
          // Collect form data
          const formData = new FormData(this);
          const name = document.getElementById('addCategory').value;

          $('myModal').modal('show');
          // Send form data to backend using fetch
          fetch("/admin/add-category", {
            method: "POST",
            headers: {
              'Content-type': 'application/json'
            },
            body: JSON.stringify({ name })
          })
            .then(response => {
              if (!response.ok) {
                throw new Error("Network response was not ok");
              }
              return response.json();
            })
            .then(data => {
              $('#myModal').modal('hide');
              if (data.message === 'category added successfully') {
                $('myModal').modal('hide');
                Swal.fire({
                  icon: 'success',
                  title: 'Category Added',
                  text: 'The category has been added successfully!',
                  toast: true,
                  timer: 2000,
                  position: 'top-end',
                  showCancelButton: false,
                  showConfirmButton: false,
                }).then((result) => {

                  window.location.reload(); // Reload the page

                });
              } else {
                $('myModal').modal('hide');
                Swal.fire({
                  position: 'top-end',
                  icon: 'error',
                  toast: true,
                  timer: 2000,
                  title: 'Category Cannot Added',
                  text: 'Failed to add category',
                  confirmButtonText: 'OK'
                });
              }
            })
            .catch(error => {
              console.error(error.message + "There was a problem with the fetch operation:", error);
              // Optionally handle error here
            });

        }


      });
    </script>

    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- JavaScript files-->
    <script src="/admin/vendor/jquery/jquery.min.js"></script>
    <script src="/admin/vendor/popper.js/umd/popper-utils.min.js"> </script>
    <script src="/admin/vendor/bootstrap/js/bootstrap.min.js"></script>
    <script src="/admin/vendor/jquery.cookie/jquery.cookie.js"> </script>
    <script src="/admin/vendor/chart.js/Chart.min.js"></script>
    <script src="/admin/vendor/jquery-validation/jquery.validate.min.js"></script>
    <script src="/admin/js/front.js"></script>
</body>

</html>