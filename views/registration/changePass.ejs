<!-- <!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Bootstrap demo</title>
    <link rel="stylesheet" href="/registration/style.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
        <style>
             body {
      background: linear-gradient(to right, #ffffff, #000000);
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
            .password-wrapper {
                position: relative;
            }
            .toggle-password {
                position: absolute;
                right: 10px;
                top: 50%;
                transform: translateY(-50%);
                cursor: pointer;
            }
        </style>
    </head>

<body>

    <!-- main container -->
<!-- <div class="container d-flex justify-content-center align-items-center min-vh-100"> -->


<!-- login container -->
<!-- <div class=" col-md-6 row rounded-4 bg-white shadow "> -->




<!-- right box -->

<!-- <div class="row  ">
                    <div class="header-text mb-1 ">
                        <p class=" pt-3 fs-2 fw-semibold text-center">Change Password </p>
                        
                    </div>
                    <form action="" method="post" id="changePass">
                        <div class="input-ground mb-3 pt-3">
                            <h6 class="text-danger" id="passMessage"></h6>
                            <div class="mb-3 password-wrapper">
                                <input id="password" name="password" type="password" class="form-control form-control-lg bg-light fs-6" placeholder=" New Password">
                                <span id="togglePassword1" class="fas fa-eye toggle-password"></span>
                            </div>

                        </div>
                        <div class="input-ground mb-3 pt-3">
                            <h6 class="text-danger" id="confirmMessage"></h6>
                            <div class="mb-3 password-wrapper">
                                <input id="confirmPassword" name="confirmPassword" type="password" class="form-control form-control-lg bg-light fs-6" placeholder="Confirm new Password">
                                <span id="togglePassword2" class="fas fa-eye toggle-password"></span>
                            </div>

                        </div>
                       
                       
                        <div class="input-group mb-3 ">
                            <input type="submit" class="btn btn-lg border btn-dark w-100 fs-6 ">
                        </div>
                       
                        <div class="input-group mb-2 mt-3 "> 
                          
                           <span class="fs-6 fw-semibold">Back to  <a class=" fs-6 fw-bold text-decoration-none" href="/login">Login!</a></span>
                        </div>
                    </form>
                </div>
            </div>

        
    </div>
    <script>
 const form = document.getElementById("changePass");
    const passInput = document.getElementById("password");
    const confirmPass = document.getElementById("confirmPassword");
    const passMessage = document.getElementById("passMessage");
    const confirmMessage = document.getElementById("confirmMessage");

    // Regex pattern to ensure at least 6 characters, with at least 3 numbers and 3 letters
    const passwordPattern = /^(?=.*\d.*\d.*\d)(?=.*[a-zA-Z].*[a-zA-Z].*[a-zA-Z]).{6,}$/;

    form.addEventListener("submit", (e) => {
        // Clear previous messages
        passMessage.innerHTML = "";
        confirmMessage.innerHTML = "";

        let valid = true;

        // Validate empty password field
        if (passInput.value.trim() === "") {
            e.preventDefault();
            passMessage.innerHTML = "Password field cannot be empty.";
            valid = false;
        }

        // Validate empty confirm password field
        if (confirmPass.value.trim() === "") {
            e.preventDefault();
            confirmMessage.innerHTML = "Confirm Password field cannot be empty.";
            valid = false;
        }

        // Validate password pattern
        if (!passwordPattern.test(passInput.value)) {
            e.preventDefault();
            passMessage.innerHTML = "Password must be at least 6 characters long and contain at least 3 numbers and 3 letters.";
            valid = false;
        }

        // Validate confirm password match
        if (confirmPass.value !== passInput.value) {
            e.preventDefault();
            confirmMessage.innerHTML = "Passwords do not match.";
            valid = false;
        }

        return valid;
    });

    document.addEventListener('DOMContentLoaded', (event) => {
        // Password Field
        const togglePassword1 = document.querySelector('#togglePassword1');
        const password = document.querySelector('#password');

        togglePassword1.addEventListener('click', function () {
            const type = password.getAttribute('type') === 'password' ? 'text' : 'password';
            password.setAttribute('type', type);
            this.classList.toggle('fa-eye-slash');
        });

        // Confirm Password Field
        const togglePassword2 = document.querySelector('#togglePassword2');
        const confirmPassword = document.querySelector('#confirmPassword');

        togglePassword2.addEventListener('click', function () {
            const type = confirmPassword.getAttribute('type') === 'password' ? 'text' : 'password';
            confirmPassword.setAttribute('type', type);
            this.classList.toggle('fa-eye-slash');
        });
    });
    </script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>
</body>

</html> -->
<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Change Password</title>
    <link rel="stylesheet" href="/registration/style.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        body {
            background: linear-gradient(to right, #ffffff, #000000);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .password-wrapper {
            position: relative;
        }

        .toggle-password {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            z-index: 10;
            color: #333;
        }


        .form-container {
            background: #fff;
            padding: 2rem;
            border-radius: 1rem;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }
    </style>
</head>

<body>
    <div class="container d-flex justify-content-center align-items-center min-vh-100">
        <div class="col-md-6 form-container">
            <h2 class="text-center mb-4">Change Password</h2>


            <form id="changePass">
                <div class="mb-3 password-wrapper">
                    <input type="password" id="password" name="password" class="form-control"
                        placeholder="New Password">
                    <span id="togglePassword1" class="fas fa-eye toggle-password"></span>
                </div>
                <div class="mb-3 password-wrapper">
                    <input type="password" id="confirmPassword" name="confirmPassword" class="form-control"
                        placeholder="Confirm Password">
                    <span id="togglePassword2" class="fas fa-eye toggle-password"></span>
                </div>
                <button type="submit" class="btn btn-dark w-100">Change Password</button>
            </form>
            <div class="text-center mt-3">
                <a href="/login" class="text-decoration-none">Back to Login</a>
            </div>
        </div>
    </div>

    <script>
        const form = document.getElementById("changePass");
        const passInput = document.getElementById("password");
        const confirmPass = document.getElementById("confirmPassword");

        const passwordPattern = /^(?=.*\d.*\d.*\d)(?=.*[a-zA-Z].*[a-zA-Z].*[a-zA-Z]).{6,}$/;

        const showToast = (type, message) => {
            Swal.fire({
                toast: true,
                position: 'top-end',
                icon: type,
                title: message,
                showConfirmButton: false,
                timer: 3000
            });
        };

        form.addEventListener("submit", async (e) => {
            e.preventDefault();

            const password = passInput.value.trim();
            const confirmPassword = confirmPass.value.trim();
            const urlParams = new URLSearchParams(window.location.search);
            const email = urlParams.get("email");

            if (!password || !confirmPassword) {
                showToast('error', 'All fields are required.');
                return;
            }

            if (!passwordPattern.test(password)) {
                showToast('error', 'Password must be at least 6 characters long and contain at least 3 numbers and 3 letters.');
                return;
            }

            if (password !== confirmPassword) {
                showToast('error', 'Passwords do not match.');
                return;
            }

            //   try {
            //     const response = await fetch(`/change-pass?email=${encodeURIComponent(email)}`, {
            //       method: 'POST',
            //       headers: { 'Content-Type': 'application/json' },
            //       body: JSON.stringify({ password, confirmPassword })
            //     });

            //     if (response.redirected) {
            //       window.location.href = response.url;
            //     } else {
            //       const result = await response.json();
            //       showToast('error', result.message || 'Failed to change password.');
            //     }
            //   } catch (error) {
            //     console.error(error);
            //     showToast('error', 'Something went wrong. Please try again.');
            //   }
            // });
            try {
                const response = await fetch(`/change-pass?email=${encodeURIComponent(email)}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ password, confirmPassword })
                });

                const result = await response.json();

                if (response.ok) {
                    Swal.fire({
                        icon: 'success',
                        title: result.message || 'Password changed successfully!',
                        showConfirmButton: false,
                        timer: 1500,
                        toast: true,
                        position: 'top-right'
                    });

                    setTimeout(() => {
                        window.location.href = result.redirect || '/login';
                    }, 1500);
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: result.message || 'Failed to change password.',
                        showConfirmButton: false,
                        timer: 2000,
                        toast: true,
                        position: 'top-right'
                    });
                }
            } catch (error) {
                console.error(error);
                Swal.fire({
                    icon: 'error',
                    title: 'Something went wrong. Please try again.',
                    showConfirmButton: false,
                    timer: 2000,
                    toast: true,
                    position: 'top-right'
                });
            }
        });

        // document.querySelectorAll('.toggle-password').forEach(icon => {
        //   icon.addEventListener('click', function () {
        //     const input = this.previousElementSibling;
        //     input.type = input.type === 'password' ? 'text' : 'password';
        //     this.classList.toggle('fa-eye-slash');
        //   });
        // });
        document.addEventListener('DOMContentLoaded', (event) => {
            // Password Field
            const togglePassword1 = document.querySelector('#togglePassword1');
            const password = document.querySelector('#password');

            togglePassword1.addEventListener('click', function () {
                const type = password.getAttribute('type') === 'password' ? 'text' : 'password';
                password.setAttribute('type', type);
                this.classList.toggle('fa-eye-slash');
            });

            // Confirm Password Field
            const togglePassword2 = document.querySelector('#togglePassword2');
            const confirmPassword = document.querySelector('#confirmPassword');

            togglePassword2.addEventListener('click', function () {
                const type = confirmPassword.getAttribute('type') === 'password' ? 'text' : 'password';
                confirmPassword.setAttribute('type', type);
                this.classList.toggle('fa-eye-slash');
            });
        });
    </script>

</body>

</html>