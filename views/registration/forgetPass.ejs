
<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Forget Password - Ticker</title>
    <link rel="stylesheet" href="/registration/style.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

    <style>
        body {
            background: linear-gradient(to right, #9e9a9a, #000000);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .card-style {
            background: #ffffff;
            border-radius: 1rem;
            box-shadow: 0 0.5rem 1.2rem rgba(0, 0, 0, 0.1);
            padding: 2rem 2.5rem;
        }

        .form-control:focus {
            border-color: #0d6efd;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }

        .btn-dark {
            transition: background-color 0.3s ease;
        }

        .btn-dark:hover {
            background-color: #343a40 !important;
        }

        .back-link a {
            color: #0d6efd;
        }

        .back-link a:hover {
            text-decoration: underline;
        }
    </style>
</head>

<body>
    <!-- Main container -->
    <div class="container d-flex justify-content-center align-items-center min-vh-100">
        <!-- Form card -->
        <div class="col-md-6 card-style">
            <div class="text-center mb-4">
                <h2 class="fw-semibold">Forgot Password?</h2>
                <p class="text-muted">Enter your email to receive OTP for password reset</p>
            </div>

            <form id="forgetPassForm"  novalidate>
                <div class="mb-3">
                    <label for="email" class="form-label fw-semibold">Email address</label>
                    <input type="email" name="email" id="email" class="form-control form-control-lg bg-light fs-6"
                        placeholder="you@example.com" required>
                    <div class="invalid-feedback">Please enter a valid email address.</div>
                </div>

                <div class="d-grid mt-4 mb-3">
                    <button type="submit" class="btn btn-dark btn-lg">Send OTP</button>
                </div>
                <div class="text-center back-link mt-3">
                    <span class="fs-6">Back to <a class="fw-bold" href="/login">Login</a></span>
                </div>
            </form>

        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>
</body>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
 const forgetForm = document.getElementById("forgetPassForm");
const emailInput = document.getElementById('email');

const isValidEmail = (email) => /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);

forgetForm.addEventListener('submit', async (event) => {
  event.preventDefault();
  const email = emailInput.value.trim();

  // Reset validation styles
  forgetForm.classList.remove('was-validated');
  emailInput.classList.remove('is-invalid');

  if (!email || !isValidEmail(email)) {
    emailInput.classList.add('is-invalid');
    return;
  }

 try {
      const res = await fetch('/forget-Pass', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ email })
      });

      const data = await res.json();

      if (data.success) {
        Swal.fire({
          toast: true,
          position: 'top-end',
          icon: 'success',
          title: data.message,
          showConfirmButton: false,
          timer: 3000
        });

        // Navigate to OTP page after short delay
        setTimeout(() => {
          window.location.href = data.redirectTo;
        }, 1000);
      } else {
        Swal.fire({
          toast: true,
          position: 'top-end',
          icon: 'error',
          title: data.message || 'Failed to send OTP',
          showConfirmButton: false,
          timer: 3000
        });
      }

    } catch (err) {
      console.error(err);
      Swal.fire({
        toast: true,
        position: 'top-end',
        icon: 'error',
        title: 'An unexpected error occurred.',
        showConfirmButton: false,
        timer: 3000
      });
    }
  });

</script>

</html>